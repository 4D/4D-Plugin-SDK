<!DOCTYPE html>
<html>
 <head>
  <title>
   PA_PackageInfo
  </title>
  <link href="favicon.gif" rel="icon" type="image/gif"/>
 </head>
 <body bgcolor="#FAFAFA" link="#008108" vlink="#008108">
  <p>
   <h2>
    PA_PackageInfo
   </h2>
  </p>
<table>
 <tr>
  <td>
   <a href="http://www.4d.com">
    <img src="menu/4D.GIF" type="image/gif"/>
   </a>
  </td>
  <td>
   <a href="index.html">
    <img src="menu/THM.png" type="image/png"/>
   </a>
  </td>
  <td>
   <a href="XKALPUSA.HTM">
    <img src="menu/ALPHA.png" type="image/png"/>
   </a>
  </td>
 </tr>
</table>
<hr/>
  <p>
   version 2003
  </p>
  <hr/>
  <p>
   PA_PackageInfo (packageNumber; pluginID; procPtr; data; resfile; name)
  </p>
  <p>
   <table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
     <td align="LEFT" valign="TOP" width="20%">
      <b>
       Parameter
      </b>
     </td>
     <td align="LEFT" valign="TOP" width="15%">
      <b>
       Type
      </b>
     </td>
     <td align="LEFT" valign="TOP" width="5%">
      <b>
      </b>
     </td>
     <td align="LEFT" valign="TOP" width="60%">
      <b>
       Description
      </b>
     </td>
    </tr>
    <tr>
     <td align="LEFT" valign="TOP" width="20%">
      packageNumber
     </td>
     <td align="LEFT" valign="TOP" width="15%">
      short
     </td>
     <td align="LEFT" valign="TOP" width="5%">
      →
     </td>
     <td align="LEFT" valign="TOP" width="60%">
      Number of the plug-in
     </td>
    </tr>
    <tr>
     <td align="LEFT" valign="TOP" width="20%">
      pluginID
     </td>
     <td align="LEFT" valign="TOP" width="15%">
      short *
     </td>
     <td align="LEFT" valign="TOP" width="5%">
      ←
     </td>
     <td align="LEFT" valign="TOP" width="60%">
      ID of the plug-in packageNumber
     </td>
    </tr>
    <tr>
     <td align="LEFT" valign="TOP" width="20%">
      procPtr
     </td>
     <td align="LEFT" valign="TOP" width="15%">
      void **
     </td>
     <td align="LEFT" valign="TOP" width="5%">
      ←
     </td>
     <td align="LEFT" valign="TOP" width="60%">
      Pointer to the code of plug-in packageNumber
     </td>
    </tr>
    <tr>
     <td align="LEFT" valign="TOP" width="20%">
      data
     </td>
     <td align="LEFT" valign="TOP" width="15%">
      void **
     </td>
     <td align="LEFT" valign="TOP" width="5%">
      ←
     </td>
     <td align="LEFT" valign="TOP" width="60%">
      Private plug-in data
     </td>
    </tr>
    <tr>
     <td align="LEFT" valign="TOP" width="20%">
      resfile
     </td>
     <td align="LEFT" valign="TOP" width="15%">
      short *
     </td>
     <td align="LEFT" valign="TOP" width="5%">
      ←
     </td>
     <td align="LEFT" valign="TOP" width="60%">
      Resource file reference of the plugin packageNumber
     </td>
    </tr>
    <tr>
     <td align="LEFT" valign="TOP" width="20%">
      name
     </td>
     <td align="LEFT" valign="TOP" width="15%">
      char *
     </td>
     <td align="LEFT" valign="TOP" width="5%">
      ←
     </td>
     <td align="LEFT" valign="TOP" width="60%">
      Name (string) of the plug-in packageNumber
     </td>
    </tr>
   </table>
  </p>
  <b>
   <p>
    Description
   </p>
  </b>
  <p>
   The routine
   <code>
    <font color="#CF0000">
     PA_PackageInfo
    </font>
   </code>
   returns various information on the package whose internal range number is
   <code>
    pluginNumber
   </code>
   .
  </p>
  <p>
   Pass the number of the plug-in in
   <code>
    packageNumber
   </code>
   . This number is in the range of 1 to the total number of opened plug-in.
  </p>
  <p>
   You receive the ID of this plug-in in the short pointed to by
   <code>
    plugID
   </code>
   , the resource file reference number of this plug-in in
   <code>
    resfile
   </code>
   , a reference to its private data in
   <code>
    data
   </code>
   , and its name in
   <code>
    name
   </code>
   .
  </p>
  <p>
   In
   <code>
    procPtr
   </code>
   , you receive a pointer to the code of the plug-in. This can be very useful in some cases since it lets you directly call  some functions of another plug-in without using the
   <code>
    <a href="CMU00063.HTM">
     EXECUTE
    </a>
   </code>
   routines (
   <code>
    <a href="CMU84738.HTM">
     PA_ExecuteMethod
    </a>
   </code>
   ,
   <code>
    <a href="CMU84737.HTM">
     PA_ExecuteFunction
    </a>
   </code>
   , etc.).
  </p>
  <p>
   Consult the FourDPack or Main function in 4DPluginAPI source code to see how you can call another plug-in. Be sure to send the
   <code>
    pluginData
   </code>
   as the plug-in will expect it and set the current resource file to plug-in resource file.
  </p>
  <b>
   <p>
    See Also
   </p>
  </b>
  <p>
   <a href="CMU84664.HTM">
    PA_FindPackage
   </a>
   .
  </p>
  <b>
   <p>
    Error Handling
   </p>
  </b>
  <code>
   <p>
    <a href="CMU84896.HTM">
     PA_GetLastError
    </a>
   </p>
  </code>
  always returns
  <code>
   eER_NoErr
  </code>
 </body>
</html>
