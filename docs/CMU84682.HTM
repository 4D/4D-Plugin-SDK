<!DOCTYPE html>
<html>
 <head>
  <title>
   PA_GetPictureInArray
  </title>
  <link href="favicon.gif" rel="icon" type="image/gif"/>
 </head>
 <body bgcolor="#FAFAFA" link="#008108" vlink="#008108">
  <p>
   <h2>
    PA_GetPictureInArray
   </h2>
  </p>
<table>
 <tr>
  <td>
   <a href="http://www.4d.com">
    <img src="menu/4D.GIF" type="image/gif"/>
   </a>
  </td>
  <td>
   <a href="index.html">
    <img src="menu/THM.png" type="image/png"/>
   </a>
  </td>
  <td>
   <a href="XKALPUSA.HTM">
    <img src="menu/ALPHA.png" type="image/png"/>
   </a>
  </td>
 </tr>
</table>
<hr/>
  <p>
   version 2003
  </p>
  <hr/>
  <p>
   PA_GetPictureInArray (array; index; picture; info) → long
  </p>
  <p>
   <table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
     <td align="LEFT" valign="TOP" width="20%">
      <b>
       Parameter
      </b>
     </td>
     <td align="LEFT" valign="TOP" width="15%">
      <b>
       Type
      </b>
     </td>
     <td align="LEFT" valign="TOP" width="5%">
      <b>
      </b>
     </td>
     <td align="LEFT" valign="TOP" width="60%">
      <b>
       Description
      </b>
     </td>
    </tr>
    <tr>
     <td align="LEFT" valign="TOP" width="20%">
      array
     </td>
     <td align="LEFT" valign="TOP" width="15%">
      PA_Variable
     </td>
     <td align="LEFT" valign="TOP" width="5%">
      →
     </td>
     <td align="LEFT" valign="TOP" width="60%">
      Array to access
     </td>
    </tr>
    <tr>
     <td align="LEFT" valign="TOP" width="20%">
      index
     </td>
     <td align="LEFT" valign="TOP" width="15%">
      long
     </td>
     <td align="LEFT" valign="TOP" width="5%">
      →
     </td>
     <td align="LEFT" valign="TOP" width="60%">
      Index of the element to access
     </td>
    </tr>
    <tr>
     <td align="LEFT" valign="TOP" width="20%">
      picture
     </td>
     <td align="LEFT" valign="TOP" width="15%">
      void *
     </td>
     <td align="LEFT" valign="TOP" width="5%">
      ←
     </td>
     <td align="LEFT" valign="TOP" width="60%">
      Pointer to the data filled with the picture
     </td>
    </tr>
    <tr>
     <td align="LEFT" valign="TOP" width="20%">
      info
     </td>
     <td align="LEFT" valign="TOP" width="15%">
      PA_PictureInfo *
     </td>
     <td align="LEFT" valign="TOP" width="5%">
      ←
     </td>
     <td align="LEFT" valign="TOP" width="60%">
      Pointer to the infos of the picture
     </td>
    </tr>
    <tr>
     <td align="LEFT" valign="TOP" width="20%">
      Function result
     </td>
     <td align="LEFT" valign="TOP" width="15%">
      long
     </td>
     <td align="LEFT" valign="TOP" width="5%">
      ←
     </td>
     <td align="LEFT" valign="TOP" width="60%">
      Size of the picture in bytes
     </td>
    </tr>
   </table>
  </p>
  <b>
   <p>
    Description
   </p>
  </b>
  <p>
   The routine
   <code>
    <font color="#CF0000">
     PA_GetPictureInArray
    </font>
   </code>
   fills the data pointed to by
   <code>
    picture
   </code>
   with the picture data of the
   <code>
    index
   </code>
   element of the picture array
   <code>
    array
   </code>
   , and returns the size of the picture. In addition, the picture information is also returned in the
   <code>
    <a href="CMU84813.HTM">
     PA_PictureInfo
    </a>
   </code>
   structure pointed to by
   <code>
    info
   </code>
   .
  </p>
  <p>
   First, pass zero in
   <code>
    picture
   </code>
   to get the size of the picture, then allocate a buffer with the correct size and again call the routine passing it this buffer. See the example below.
  </p>
  <p>
   4th Dimension uses Macintosh Pictures internally. The data returned by this function is the content of a Macintosh Picture Handle. If you want to draw the picture using Macintosh Toolbox or Mac2Win under Windows, it may be more convenient using
   <code>
    <a href="CMU84681.HTM">
     PA_GetPictureHandleInArray
    </a>
   </code>
   , but in this case you are not the owner of the handle -- it still belongs to the array.
  </p>
  <p>
   A Macintosh Picture starts with 5 short values that gives the size and the rectangle of the picture respectively. Under Windows, these 5 short values are byte swapped into the Windows byte order. If you want to store your picture on a PICT file, you need to byte swap these values back to the Macintosh byte order so to write a regular Macintosh PICT file.
  </p>
  <p>
   If the array is not a
   <code>
    eVK_ArrayPicture
   </code>
   or if
   <code>
    index
   </code>
   is out of range, the routine returns 0 and leaves
   <code>
    picture
   </code>
   and
   <code>
    info
   </code>
   unchanged.
  </p>
  <b>
   <p>
    Example
   </p>
  </b>
  <p>
   Get a picture element (no error checking here) and its information.
  </p>
  <p>
  </p>
  <pre><code>      long size;
      PA_PictureInfo   info;
      char *buffer;
 
   // First, call the routine with 0L as the picture pointer to get its size
      size = PA_GetPictureInArray( anArray, index, 0L, 0L );
   // Then allocate a buffer...
      buffer = malloc( size );
   // ... and fill it with the data
      size = PA_GetPictureInArray( anArray, index, buffer, &amp;info );
      /* . . . */
   // Cleanup here if necessary
      free( buffer );
</code></pre>
  <b>
   <p>
    See Also
   </p>
  </b>
  <p>
   <a href="CMU84681.HTM">
    PA_GetPictureHandleInArray
   </a>
   .
  </p>
  <b>
   <p>
    Error Handling
   </p>
  </b>
  <p>
   None.
  </p>
 </body>
</html>